# setup for netlify hosting with github
# specify backend and publication branch
backend:
  name: git-gateway
  branch: gallery--strip-victor # Branch to update (optional; defaults to master)
  repo: jam-netlifycms--marymcdonnell

# media_folder => where uploaded files saved to in repo
# public_folder => where they’re found in published site
# These lines should *not* be indented
media_folder: "src/img/uploads" # Directory where uploaded media files will be stored 
public_folder: "/img/uploads" # The src attribute for uploaded media will begin with /img
display_url: https://marymcdonnell-staging.netlify.com/ # display site URL for return to site
logo_url: https://your-site.com/images/logo.svg # optional custom logo display top of login page
publish_mode: editorial_workflow # allow for review of new content before going live to main repository branch




collections: # A list of collections the CMS should be able to edit
# gallery 
- name: gallery
  label: "Gallery items" # Used in the UI, ie.: "New Post"
  label-singular: "New item"  # singular label for certain elements in the editor ():
  description: "Add a new item for each image and fill fields. Article text is for if you want to add optional accompanying body copy for the image." # optional text, displayed below the label when viewing a collection 
  # (wanted to put this within the respective markdown widget as with help text in perch templates but no joy — but aha, hint is for helper text) description: "Optional accompanying body copy for the image" 
  folder: "site/content/gallery" # The path to the folder where the documents/created item files are stored
  slug: "{{slug}}-{{year}}-{{month}}-{{day}}"
  format: toml-frontmatter 
  create: true # Allow users to create new documents in this collection
  fields: # The fields each document in this collection have (usually corresponding to file.md front matter)
  
    - {label: "Title", name: "title", widget: "string"} 
    - {label: "Description", name: "description", widget: "string"}
    - {label: "Image", name: "image", widget: "image"}
    - {label: "Article text", name: "body", widget: "markdown", buttons:["link"], default: "accepts markdown content", hint: "optionally add helper text directly below a widget. Useful for including instructions", required: false}
# buttons: an array of strings representing the formatting buttons to display, all buttons shown by default. Buttons include: bold, italic, code, link, heading-one, heading-two, quote, code-block, bulleted-list, and numbered-list
# examples
# -------------------------------------------------------------------
  
# collections:
#   - name: "blog" # Used in routes, e.g., /admin/collections/blog
#     label: "Blog" # Used in the UI
#     folder: "_posts/blog" # The path to the folder where the documents are stored
#     create: true # Allow users to create new documents in this collection
#     slug: "{{year}}-{{month}}-{{day}}-{{slug}}" # Filename template, e.g., YYYY-MM-DD-title.md
#     fields: # The fields for each document, usually in front matter
#       - {label: "Layout", name: "layout", widget: "hidden", default: "blog"}
#       - {label: "Title", name: "title", widget: "string"}
#       - {label: "Publish Date", name: "date", widget: "datetime"}
#       - {label: "Featured Image", name: "thumbnail", widget: "image"}
#       - {label: "Rating (scale of 1-5)", name: "rating", widget: "number"}
#       - {label: "Body", name: "body", widget: "markdown"}
      
# - name: "post" # Used in routes, ie.: /admin/collections/:slug/edit
  #   label: "Post" # Used in the UI, ie.: "New Post"
  #   folder: "site/content/posts" # The path to the folder where the documents are stored
  #   create: true # Allow users to create new documents in this collection
  #   fields: # The fields each document in this collection have
  #     - {label: "Title", name: "title", widget: "string", tagname: "h1"}
  #     - {label: "Body", name: "body", widget: "markdown"}
  #     - {label: "Foo", name: "foo", widget: "foo"}
  #     - {label: "Publish Date", name: "date", widget: "datetime"}
  

